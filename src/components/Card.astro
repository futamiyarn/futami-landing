---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
	bgImage?: string;
	className?: string;
	description?: string;
	iconName?: string;
	img?: ImageMetadata;
	name: string;
	url: string;
}

const { name, description, url, iconName, img, bgImage, className } =
	Astro.props;

function hasHostname(link: string) {
	const regex = /^(https?:\/\/)?([a-zA-Z0-9.-]+)(\/[a-zA-Z0-9.-]*)*\/?$/;
	const match = link.match(regex);
	// Check if the second capturing group (hostname) exists in the match
	return match && match[2] !== undefined;
}

const redirect = hasHostname(url);
---

<a
	class={`${bgImage ? 'card thumb-card' : 'card'} ${className}`}
	href={url}
	target={redirect ? '_blank' : undefined}
	rel={redirect ? 'noopener noreferrer' : undefined}
	title={name}
	style={bgImage
		? `
	background-image:linear-gradient(rgba(0, 0, 0, 0.6),
rgba(0, 0, 0, 0.6)), url(${bgImage});
`
		: ''}
>
	<div class="card-icon">
		{iconName && <Icon name={iconName} />}
		{
			img && (
				<Image
					src={img}
					alt={name}
					quality={75}
					width={128}
					height={128}
					loading="eager"
					slot="image-astro"
				/>
			)
		}
	</div>
	<div class="card-content">
		<h3 class="card-content__title">{name}</h3>
		{description ? <span class="card-content__author">{description}</span> : ''}
	</div>
</a>
